---
import * as interfaces from '../../lib/interfaces.ts'
import { buildHeadingId } from '../../lib/blog-helpers.ts'
import { snakeToKebab } from '../../lib/style-helpers.ts'
import '../../styles/notion-color.css'

export interface Props {
  block: interfaces.Block
  headings: interfaces.Block[]
}

const { block, headings } = Astro.props
---

<div class="table-of-contents">
  <p>目次</p>
  {
    headings.map((headingBlock: interfaces.Block) => {
      const heading =
        headingBlock.Heading1 || headingBlock.Heading2 || headingBlock.Heading3

      let indentClass = ''
      if (headingBlock.Type === 'heading_2') {
        indentClass = 'indent-1'
      } else if (headingBlock.Type === 'heading_3') {
        indentClass = 'indent-2'
      }

      return (
        <a
          href={`#${buildHeadingId(heading)}`}
          class={`table-of-contents ${snakeToKebab(
            block.TableOfContents.Color
          )} ${indentClass}`}
        >
          {heading.RichTexts.map(
            (richText: interfaces.RichText) => richText.PlainText
          ).join('')}
        </a>
      )
    })
  }
</div>

<style lang="scss">
  .table-of-contents {
    background: #f8f8f8;
    border-radius: var(--radius);
    padding: 0.6rem 1.2rem;
    display: block;
    > p {
      line-height: 1;
      padding: 0.6rem 0 0.4rem;
      color: #847d89;
      margin: 0 0 0.4rem;
      text-align: center;
    }
    > a {
      display: block;
      line-height: 1.5rem;
      font-size: 0.9rem;
      &:hover {
        background: rgba(241, 241, 239, 1) !important;
      }
      &.indent-1 {
        padding-left: 0;
      }
      &.indent-2 {
        padding-left: 1.2rem;
      }
    }
  }
</style>
