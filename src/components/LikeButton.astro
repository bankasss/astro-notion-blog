---
export interface Props {
  post: Post
}

const { post } = Astro.props
---

<button id="like-button" class="like-button" data-slug={post.Slug}>♥0</button>

<style lang="scss">
  .like-button {
  position: relative;
  display: inline-block;
  background-color: var(--main);
  padding: 0.4em 2.4em;
  border-radius: 5px;
  border: 2px solid transparent;
  margin-top: 1rem;
  font-weight: bold;
  font-size: 1rem;
  color: #ffffff;
  letter-spacing: 0.1em;
  transition: all 0.3s ease;
  cursor: pointer;
  text-decoration: none;
  width: 100%;
  &::before,
  &::after {
    content: "";
    background-size: contain;
    background-repeat: no-repeat;
    width: 20px;
    height: 20px;
    position: absolute;
    opacity: 0;
    filter: hue-rotate(-20deg)brightness(1.5);
  }
  &::before {
    background-image: url('/icon_heart.svg');
    top: 0;
    left: -12px;
  }
  &::after {
    background-image: url('/icon_heart-reverse.svg');
    bottom: -6px;
    right: -14px;
  }
  @media (min-width: 641px) {
    &:hover {
      opacity: 0.5;
    }
  }
  &.is-clicked{
    background-color: #ffffff;
    border-color: var(--main);
    color: var(--main);
    &::before {
      animation: heart 1.5s infinite ease-out;
    }
    
    &::after {
      animation: heart 1.5s 0.2s infinite ease-out;
    }
    @media (min-width: 641px) {
      &:hover {
        opacity: 1.0;
      }
    }
  }
}

  @keyframes heart {
    0% {
      transform: translateY(0) scale(1);
      opacity: 0;
    }
    25% {
      opacity: 1;
    }
    75% {
      opacity: 1;
    }
    100% {
      transform: translateY(-20px) scale(1.4);
      opacity: 0;
    }
  }
</style>

<script is:inline>
  document.addEventListener('DOMContentLoaded', async () => {
    const button = document.querySelector('.like-button')
    const slug = button.dataset.slug
    const url = `/api/likes.json?slug=${slug}`

    const res = await fetch(url)
    if (res.status !== 200) {
      throw new Error('Failed to like get')
    }

    const { likes } = await res.json()
    console.log(likes)
    button.textContent = `❤️ ${likes}`

    button.addEventListener('click', async () => {
      const res = await fetch(url, { method: 'POST' })
      if (res.status !== 200) {
        throw new Error('Failed to like post')
      }

      const { likes } = await res.json()
      button.textContent = `❤️ ${likes}`
      document.getElementById('like-button').classList.add("is-clicked");
    })
  })
</script>